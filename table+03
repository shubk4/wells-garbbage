<!DOCTYPE html>
<html>
<head>
  <title>Pagination and Sorting Example</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
    }
    table {
      border-collapse: collapse;
      width: 100%;
      margin: 20px 0;
      background-color: #fff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      cursor: pointer;
    }
    th {
      background-color: #f2f2f2;
      font-weight: bold;
      text-align: left;
    }
    th:hover {
      background-color: #e6e6e6;
    }
    td {
      text-align: left;
    }
    .pagination {
      display: flex;
      justify-content: center;
      margin-top: 20px;
    }
    .pagination button {
      background-color: #f2f2f2;
      border: 1px solid #ddd;
      color: black;
      padding: 8px 16px;
      text-decoration: none;
      cursor: pointer;
    }
    .pagination button:hover {
      background-color: #ddd;
    }
    .pagination .active {
      background-color: #4CAF50;
      color: white;
    }
  </style>
</head>
<body>
  <table id="myTable">
    <!-- Table headers -->
    <thead>
      <tr>
        <th onclick="sortTable(0)">Column 1</th>
        <th onclick="sortTable(1)">Column 2</th>
        <th onclick="sortTable(2)">Column 3</th>
        <th onclick="sortTable(3)">Column 4</th>
        <th onclick="sortTable(4)">Column 5</th>
        <th onclick="sortTable(5)">Column 6</th>
        <th onclick="sortTable(6)">Column 7</th>
        <th onclick="sortTable(7)">Column 8</th>
        <th onclick="sortTable(8)">Column 9</th>
        <th onclick="sortTable(9)">Column 10</th>
        <th onclick="sortTable(10)">Column 11</th>
        <th onclick="sortTable(11)">Column 12</th>
      </tr>
    </thead>
    <!-- Table rows -->
    <tbody>
      <!-- Your table row data here -->
      <!-- Example row -->
      <tr onclick="rowClick(this)">
        <td>Data 1</td>
        <td>Data 2</td>
        <td>Data 3</td>
        <td>Data 4</td>
        <td>Data 5</td>
        <td>Data 6</td>
        <td>Data 7</td>
        <td>Data 8</td>
        <td>Data 9</td>
        <td>Data 10</td>
        <td>Data 11</td>
        <td>Data 12</td>
      </tr>
      <!-- Repeat the above row for 100 times -->
    </tbody>
  </table>

  <div class="pagination">
    <button onclick="previousPage()">Previous</button>
    <button onclick="nextPage()">Next</button>
  </div>

  <script>
    var table = document.getElementById("myTable");
    var currentPage = 0;
    var rowsPerPage = 10; // Number of rows to display per page
    var currentColumn = -1;
    var ascending = true;

    function showPage(page) {
      var start = page * rowsPerPage + 1;
      var end = (page + 1) * rowsPerPage;

      for (var i = 1; i < table.rows.length; i++) {
        table.rows[i].style.display = (i >= start && i <= end) ? "table-row" : "none";
      }
    }

    function previousPage() {
      if (currentPage > 0) {
        currentPage--;
        showPage(currentPage);
      }
    }

    function nextPage() {
      if (currentPage < Math.ceil((table.rows.length - 1) / rowsPerPage) - 1) {
        currentPage++;
        showPage(currentPage);
      }
    }

    function sortTable(column) {
      if (currentColumn === column) {
        ascending = !ascending;
      } else {
        currentColumn = column;
        ascending = true;
      }

      var rows = Array.from(table.rows).slice(1); // Exclude header row
      rows.sort(function(a, b) {
        var aValue = a.cells[column].innerText;
        var bValue = b.cells[column].innerText;

        // Sort column 1 and column 2 based on text
        if (column === 0 || column === 1) {
          return ascending ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);
        }
        // Sort other columns based on numerical data
        else {
          var aNumber = parseFloat(aValue);
          var bNumber = parseFloat(bValue);
          return ascending ? (aNumber - bNumber) : (bNumber - aNumber);
        }
      });

      for (var i = 0; i < rows.length; i++) {
        table.tBodies[0].appendChild(rows[i]);
      }
    }

    function rowClick(row) {
      // Get the row index (excluding the header row)
      var rowIndex = Array.from(table.rows).indexOf(row) - 1;

      // Handle the row click event here
      console.log("Clicked row index: " + rowIndex);
    }

    showPage(currentPage); // Show the initial page
  </script>
</body>
</html>
