<!DOCTYPE html>
<html>
<head>
    <style>
        .red-element {
            background-color: red;
            display: inline-block;
            padding: 20px;
        }
        
        .red-element table {
            color: white;
            width: 100%;
        }
        
        .red-element th, .red-element td {
            padding: 10px;
            border: 1px solid white;
        }
        
        .red-element td:last-child {
            text-align: center;
        }
        
        .red-element td button {
            background-color: white;
            color: red;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="red-element" id="redElement">
        <table>
            <tr>
                <th rowspan="2" id="first-column-header">Header 1</th>
                <th>Header 2</th>
                <th>Header 3</th>
                <th>Header 4</th>
                <th>Header 5</th>
                <th>Actions</th>
            </tr>
            <tr>
                <td>Data 2</td>
                <td>Data 3</td>
                <td>Data 4</td>
                <td>Data 5</td>
                <td><button onclick="deleteRow(this)">Delete</button></td>
            </tr>
            <tr>
                <td>Data 6</td>
                <td>Data 7</td>
                <td>Data 8</td>
                <td>Data 9</td>
                <td><button onclick="deleteRow(this)">Delete</button></td>
            </tr>
            <tr>
                <td>Data 10</td>
                <td>Data 11</td>
                <td>Data 12</td>
                <td>Data 13</td>
                <td><button onclick="deleteRow(this)">Delete</button></td>
            </tr>
        </table>
    </div>

    <script>
        // Function to delete a row
        function deleteRow(button) {
            var row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
            
            // Adjust the width and height of the red element based on the table size
            var redElement = document.getElementById('redElement');
            var table = redElement.querySelector('table');
            var rowCount = table.getElementsByTagName('tr').length;
            var colCount = table.getElementsByTagName('th').length - 1;

            redElement.style.width = table.offsetWidth + 'px';
            redElement.style.height = (rowCount * 40 + 40) + 'px';

            // Adjust the rowspan of the first column header
            var firstColumnHeader = document.getElementById('first-column-header');
            firstColumnHeader.setAttribute('rowspan', rowCount);
        }
        
        // Adjust the initial width and height of the red element based on the table size
        window.addEventListener('load', function() {
            var redElement = document.getElementById('redElement');
            var table = redElement.querySelector('table');
            var rowCount = table.getElementsByTagName('tr').length;
            var colCount = table.getElementsByTagName('th').length - 1;

            redElement.style.width = table.offsetWidth + 'px';
            redElement.style.height = (rowCount * 40 + 40) + 'px';

            // Set initial rowspan of the first column header
            var firstColumnHeader = document.getElementById('first-column-header');
            firstColumnHeader.setAttribute('rowspan', rowCount);
        });
    </script>
</body>
</html>
